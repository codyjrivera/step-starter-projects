<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.google.sps</groupId>
  <artifactId>portfolio</artifactId>
  <version>1</version>
  <packaging>war</packaging>

  <properties>
    <!-- This project uses Java 8 -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <failOnMissingWebXml>false</failOnMissingWebXml>
  </properties>

  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>4.0.1</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- javac 1.8 Custom Configuration for backend -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <fork>true</fork>
          <compilerArgs>
            <arg>-Xlint:all</arg>
          </compilerArgs>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>

      <!-- npm Custom Configuration for frontend -->
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.10.0</version>
        <!-- Frontend build steps -->
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <!-- See https://nodejs.org/en/download/ for latest node and npm (lts) versions -->
              <nodeVersion>v12.17.0</nodeVersion>
              <npmVersion>6.14.4</npmVersion>
            </configuration>
          </execution>

          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <!-- Optional configuration which provides for running any npm command -->
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>

          <execution>
            <id>webpack build</id>
            <goals>
              <goal>webpack</goal>
            </goals>
            <!-- optional: the default phase is "generate-resources" -->
            <phase>generate-resources</phase>
            <configuration>
              <!-- optional: if not specified, it will run webpack's default
              build (and you can remove this whole <configuration> section.) -->
              <arguments>--mode=development</arguments>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <!-- Frontend source will be stored in this directory -->
          <workingDirectory>src/main/webapp</workingDirectory>
          <installDirectory>src/main/webapp</installDirectory>
        </configuration>
      </plugin>

      <!-- .war web app packaging -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.2</version>
        <!-- npm run build stores its output in this directory -->
        <configuration>
          <warSourceDirectory>src/main/webapp/src</warSourceDirectory>
        </configuration>
      </plugin>

      <!-- Provides `mvn package appengine:run` for local testing
           and `mvn package appengine:deploy` for deploying. -->
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>appengine-maven-plugin</artifactId>
        <version>2.2.0</version>
        <configuration>
          <!-- TODO: set project ID. -->
          <deploy.projectId>codyjrivera-step-2020</deploy.projectId>
          <deploy.version>1</deploy.version>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
